---
source: semigroup_derive/src/construction.rs
assertion_line: 70
expression: formatted
---
#[automatically_derived]
#[cfg(feature = "monoid")]
impl<T: std::ops::Add> crate::Monoid for Sum<T> {
    fn unit() -> Self {
        Default::default()
    }
}
#[automatically_derived]
impl<T: std::ops::Add> crate::Commutative for Sum<T> {}
#[automatically_derived]
impl<T: std::ops::Add> From<T> for Sum<T> {
    fn from(value: T) -> Self {
        Sum(value)
    }
}
#[automatically_derived]
impl<T: std::ops::Add> std::ops::Deref for Sum<T> {
    type Target = T;
    fn deref(&self) -> &Self::Target {
        &self.0
    }
}
#[automatically_derived]
impl<T: std::ops::Add> std::ops::DerefMut for Sum<T> {
    fn deref_mut(&mut self) -> &mut Self::Target {
        &mut self.0
    }
}
#[automatically_derived]
impl<T: std::ops::Add> crate::Construction<T> for Sum<T> {
    fn into_inner(self) -> T {
        self.0
    }
}

---
source: semigroup_derive/src/construction.rs
assertion_line: 69
expression: formatted
---
#[automatically_derived]
impl<T> ::semigroup::Semigroup for Coalesce<T> {
    fn semigroup_op(base: Self, other: Self) -> Self {
        ::semigroup::Annotated::lift_unit_annotated_op((base, ()), (other, ()))
    }
}
#[automatically_derived]
impl<T, A> ::semigroup::Annotate<A> for Coalesce<T> {
    type Annotation = A;
    fn annotated(self, annotation: Self::Annotation) -> ::semigroup::Annotated<Self, A> {
        ::semigroup::Annotated::new(self, annotation)
    }
}
#[automatically_derived]
impl<T> From<Option<T>> for Coalesce<T> {
    fn from(value: Option<T>) -> Self {
        Coalesce(value)
    }
}
#[automatically_derived]
impl<T> std::ops::Deref for Coalesce<T> {
    type Target = Option<T>;
    fn deref(&self) -> &Self::Target {
        &self.0
    }
}
#[automatically_derived]
impl<T> std::ops::DerefMut for Coalesce<T> {
    fn deref_mut(&mut self) -> &mut Self::Target {
        &mut self.0
    }
}
#[automatically_derived]
impl<T> ::semigroup::op::Construction<Option<T>> for Coalesce<T> {
    fn into_inner(self) -> Option<T> {
        self.0
    }
}
#[automatically_derived]
impl<T, A> ::semigroup::op::ConstructionAnnotated<Option<T>, A> for Coalesce<T> {}
